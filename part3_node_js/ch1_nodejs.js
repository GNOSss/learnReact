/*

Reacts를 배우려고하는데 갑자기 왜 node.js를 사용하는거지 ???

React.js의 기술은 Node.js를 기반으로 동작하는 기술이기 때문에 그렇습니다.

그리고 이런 React뿐만 아니라 Next.js , Vue.js , Svelte 등 

모두 다 Node.js 기반으로 동작하는 그런 기술들입니다.

그렇기 때문에 우리가 Node.js에 대한 기본적인 이해가 없다면

리액트를 배운다고 해도 제대로 이해하기는 굉장히 어렵고 또 어떻게든 건너뛰면서 학습한다해도

그거는 사실상 겉핥기하는 수준에 지나지 않기 때문에

이번 섹션에서 이 Node.js에 대한 것들을 먼저 확실하게 넘어 가도록 하겠습니다.

*/

/*
Node.js는 웹 브라우저가 아닌 환경에서도 우리 자바스크립트 코드를 실행 시켜주는

자바스크립트의 런타임, 즉 자바스크립트의 실행 환경입니다 !!

실행 환경이라는 단어를 좀 더 쉽게 말씀드리자면 , 이것은 구동기라고 표현할 수 있습니다.

구동기라는건 기본적으로 무언가를 동작시키는 뭐 기계라던가 프로그램이라던가 그런 것들을 의미하는 거 잖아요.

게임기가 우리가 가지고 있는 게임들을 구동해주는 것 처럼

Node.js도 우리 자바스크립트 코드를 실행시켜주는 구동기다. 라고 이해주시면 되겠습니다.

우리 프로그래밍에서는 이러한 언어를 구동하는 구동기를 실행 환경이라고 해서 Run time이라고도 합니다.

Node.js의 공식 웹사이트에 들어가 보시면 상단에 소개문구에 이렇게
"Node.js는 JavaScript 엔진으로 빌드(만들어진)된 JavaScript 런타임입니다."
라고 확일 할 수 있습니다.

*/

/* 
이거 왜 만들었을까 ?? 왜 Node가 필요할까 ??

이를 알기 위해서는 먼저 자바스크립트의 히스토리에 대해서 간략하게 살펴 볼 필요가 있습니다.

자바스크립트는 태생 자체가 웹페이지 안에서 일어나는 아주 단순한 기능만을 개발하기 위해서 만들어진

간단한 스크립트 언어입니다.

원래는 아주 단순한 인터랙션을 개발하기 위한 그런 목적으로 오직 웹브라우저 내에서만 동작할 수 있도록 개발되었습니다.
(간단한 웹페이지 효과 같은 것들 ?)

그렇기 때문에 동시대에 존재했던 C언어나 자바 언어와는 다르게 그 문법 자체가 매우 유연하고 

또 작성하기가 편리하도록 설계되었습니다.

그래서 우리 개발자들이 최대한 빠르게 개발할 수 있도록 그 생산성에만 중심을 두고 언어가 설계가 되었던 것이죠

그런데 놀랍게도 이러한 자바스크립트의 문법 체계 또는 설계 철학애 많은 사람들이 큰 매력을 느꼈습니다.

그리고 이렇게 자바스크립트의 매력에 빠진 사람들은 이젠 자바스크립트를 이용해서

웹 페이지 내부의 기능을 만드는 걸 넘어서 이제는 웹 브라우저 바깥에서도 우리 자바스크립트를 이용해서

프로그램을 만들고 싶어했습니다.

그리고 이러한 바램은 사실이 되었고 2009년도에 우리가 지금 살펴보고 있는 Node.js가 등장하게 되면서

이제 자바스크립트는 어디서든 동작할 수 있는 아주 범용적인 언어가 되었습니다.

그래서 Node.js는 자바스크립트가 가진 태생적인 한계를 넘어설 수 있게 해주었고

그 결과 이제는 Node.js를 이용해서 자바스크립트로 많은 것들을 만들어내기 시작했습니다.
[웹 서버 : 넷플릭스, 에어비앤비...]
[모바일 앱 : 페이스북, 인스타그램...]
[데스크톱 앱 : 슬랙, 디스코드...]

기존에 자바, C, C# 같은 언어로 만들던 웹서버는 이제는 자바스크립트로 구축되는 일이 굉장히 많아졌고

또 더 나아가 모바일 어플리케이션을 만들고 데스크탑 어플케이션까지 만들기 시작했습니다.

그야말로 자바스크립트의 전성기를 Node.js가 이끌었다 라고도 할 수 있겠습니다.

*/
